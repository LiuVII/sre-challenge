# docker-compose.yml
services:
  postgres-primary:
    image: postgres:16
    environment:
      POSTGRES_DB: todos
      POSTGRES_USER: todo_app_user
      POSTGRES_PASSWORD: localdev
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U todo_app_user"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_primary_data:/var/lib/postgresql/data

  liquibase:
    build: 
      context: .
      dockerfile: ./migrations/Dockerfile
    environment:
      LIQUIBASE_COMMAND_USERNAME: todo_app_user
      LIQUIBASE_COMMAND_PASSWORD: localdev
      LIQUIBASE_COMMAND_CONTEXT_FILTER: dev
      DB_HOST: postgres-primary
      DB_PORT: 5432
      DB_NAME: todos
    depends_on:
      postgres-primary:
        condition: service_healthy 
    command: bash -c "liquibase --url=jdbc:postgresql://$${DB_HOST}:$${DB_PORT}/$${DB_NAME} update"

  test:
    build: 
      context: .
      dockerfile: ./src/Dockerfile
    volumes:
      - ./src:/src
    environment:
      PYTHONPATH: /src
    command: python -m pytest /src/tests/
  
  todo-app:
    build: 
      context: .
      dockerfile: ./src/Dockerfile
    environment:
      DB_HOST: postgres-primary
      DB_USER: todo_app_user
      DB_PASSWORD: localdev
      DB_NAME: todos
      DB_SCHEMA: todo_app
      FLASK_ENV: development
    ports:
      - "8080:8080"
    depends_on:
      test:
        condition: service_completed_successfully
      liquibase:
        condition: service_completed_successfully

volumes:
  postgres_primary_data:
